{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["StyledGrid","styled","div","StyledSpan","span","sleep","ms","Promise","resolve","setTimeout","Bait","props","useState","isHover","setHover","sleepSetHover","state","a","onMouseEnter","onMouseLeave","gotted","bait","App","words","Sugma","Stigma","Fondalma","Ramma","Rubondese","Sugondese","Mile","Tipodiss","Wiremouth","Wilma","Sloberon","Dragon","Nudinyore","Kombucha","Pudding","E10","textSquareLoop","i","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAGMA,EAAaC,IAAOC,IAAV,gQAaVC,EAAaF,IAAOG,KAAV,qVAoBhB,SAASC,EAAMC,GACb,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,MAGtD,SAASI,EAAKC,GACZ,MAA4BC,mBAAS,GAArC,mBAAOC,EAAP,KAAgBC,EAAhB,KADmB,SAEJC,EAFI,gFAEnB,WAA6BT,EAAIU,GAAjC,SAAAC,EAAA,sEACQZ,EAAMC,GADd,OAEEQ,EAASE,GAFX,4CAFmB,sBAMnB,OACE,cAACb,EAAD,CACEe,aAAc,kBAAMH,EAAc,GAAI,IACtCI,aAAc,kBAAMJ,EAAc,IAAK,IAFzC,SAIGF,EAAUF,EAAMS,OAAST,EAAMU,OAsCvBC,MAjCf,WACE,IAAMC,EAAQ,CACZC,MAAO,aACPC,OAAQ,wBACRC,SAAU,iBACVC,MAAO,uBACPC,UAAW,iBACX,aAAc,kBACdC,UAAW,iBACXC,KAAM,iBACNC,SAAU,yBACVC,UAAW,yBACXC,MAAO,6BACP,eAAgB,0BAChB,UAAW,mBACXC,SAAU,mBACV,gBAAiB,yBACjBC,OAAQ,kCACRC,UAAW,mBACXC,SAAU,4BACV,kBAAmB,+BACnBC,QAAS,+BACT,WAAY,iCACZC,IAAK,gBACL,YAAa,sCAEXC,EAAiB,GACrB,IAAK,IAAIC,KAAKlB,EACZiB,EAAeE,KAAK,cAAChC,EAAD,CAAcW,KAAMoB,EAAGrB,OAAQG,EAAMkB,IAA1BA,IAEjC,OAAO,cAACzC,EAAD,UAAawC,KC1EPG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8efff2ee.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledGrid = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: 640px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n  }\n  @media (min-width: 1024px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`;\n\nconst StyledSpan = styled.span`\n  padding: 2rem;\n  font-size: 2rem;\n  text-align: center;\n  color: white;\n\n  transition: font-size 1s;\n  :hover,\n  :active {\n    font-size: 4rem;\n    transition: font-size 1s;\n    min-width: 0;\n    min-height: 0;\n    overflow: auto;\n  }\n\n  @media (min-width: 640px) {\n    overflow: visible;\n  }\n`;\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nfunction Bait(props) {\n  const [isHover, setHover] = useState(0);\n  async function sleepSetHover(ms, state) {\n    await sleep(ms);\n    setHover(state);\n  }\n  return (\n    <StyledSpan\n      onMouseEnter={() => sleepSetHover(10, 1)}\n      onMouseLeave={() => sleepSetHover(500, 0)}\n    >\n      {isHover ? props.gotted : props.bait}\n    </StyledSpan>\n  );\n}\n\nfunction App() {\n  const words = {\n    Sugma: \"SUGMA COCK\",\n    Stigma: \"STIGMA DICK IN YO ASS\",\n    Fondalma: \"FONDALMA BALLS\",\n    Ramma: \"RAMMA COCK IN YO ASS\",\n    Rubondese: \"RUBONDESE NUTS\",\n    \"Lee Ghandi\": \"LEE GHANDI NUTS\",\n    Sugondese: \"SUGONDESE NUTS\",\n    Mile: \"RUB MILEFT NUT\",\n    Tipodiss: \"SUCK THE TIPODISS COCK\",\n    Wiremouth: \"WIREMOUTH ON THIS DICK\",\n    Wilma: \"WILMA COCK FIT IN YO MOUTH\",\n    \"Plant Tulips\": \"PLANT TULIPS ON MA DICK\",\n    \"Saw Con\": \"SAW CON MA BALLS\",\n    Sloberon: \"SLOBERON MA COCK\",\n    \"Taygalooh cat\": \"TAYGALOOH CAT MA BALLS\",\n    Dragon: \"DRAGON DEEZ NUTS ACROSS YO FACE\",\n    Nudinyore: \"NUDDINYORE MOUTH\",\n    Kombucha: \"KOMBUCHA MOUTH ON MA COCK\",\n    \"Candies/Candice\": \"CANDIES NUTS FIT IN YO MOUTH\",\n    Pudding: \"PUDDING DEEZ NUTS ON YO CHIN\",\n    \"Leav/ing\": \"LEAV/ING DEEZ NUTS IN YO MOUTH\",\n    E10: \"E10 DEEZ NUTS\",\n    \"Papa Pear\": \"PAPA PEAR OF DEEZ NUTS IN YO MOUTH\",\n  };\n  var textSquareLoop = [];\n  for (let i in words) {\n    textSquareLoop.push(<Bait key={i} bait={i} gotted={words[i]}></Bait>);\n  }\n  return <StyledGrid>{textSquareLoop}</StyledGrid>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}